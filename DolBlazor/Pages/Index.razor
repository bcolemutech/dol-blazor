@page "/"
@using dol_sdk.Services
@using dol_sdk.Controllers
@using dol_sdk.POCOs
@using DolBlazor.Components
@inject ICharacterController charController
@inject ISecurityService Security
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="container">
    <div class="row">
        <img alt="Dominion of Light" src="Images/cooltext387066746551592.png" class="col">
    </div>
    <div class="row">
        @if (Security.Identity is not null && !Security.Identity.IsExpired())
        {
            <div class="col-lg-6 col-md-12 card">
                <div class="card-header">
                    <h2>Characters</h2>
                </div>
                <div class="card-body">

                    <h5 class="card-title">Select your character</h5>
                    @if (Characters.Count == 0)
                    {
                        <p class="card-text">You have no characters to play. Create one first.</p>
                    }
                    else
                    {
                        <div class="list-group">
                            @foreach (var actor in Characters)
                            {
                                <a class="list-group-item list-group-item-action @(IsCurrent(actor.Name))" @onclick=@(() => SetCurrent(actor))>@actor.Name</a>
                            }
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <button type="button" class="btn btn-success" @onclick="() => Modal.Open()">Create</button>
                        <CharacterCreationModal @ref="Modal"></CharacterCreationModal>
                        <button type="button" class="btn btn-secondary" disabled="@CharacterIsNotSelected">Edit</button>
                        <button type="button" class="btn btn-danger" @onclick="DeleteCharacter" disabled="@CharacterIsNotSelected">Delete</button>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 card">
                <div class="card-header">
                    <h2>Settings</h2>
                </div>
                <div class="card-body">
                    -----
                </div>
            </div>
        }
        else
        {
            <div class="col">
                <h3>Log in <a href="/Login?returnUrl=">here</a></h3>
            </div>
        }
    </div>
</div>

@code
{
    private List<Character> Characters;
    private bool CharacterIsNotSelected => charController.Current == null;

    private Components.CharacterCreationModal Modal { get; set; }

    protected override Task OnInitializedAsync()
    {
        if (Security.Identity != null)
        {
            Characters = charController.GetCharacterData().ToList();
        }
        return base.OnInitializedAsync();
    }

    private string IsCurrent(string actorName) => actorName == charController?.Current?.Name ? "active" : "";

    private void SetCurrent(Character actor)
    {
        charController.Current = actor;
        StateHasChanged();
    }

    private void DeleteCharacter()
    {
        if (CharacterIsNotSelected) return;
        charController.Delete(charController.Current.Name);
        charController.Current = null;
        NavigationManager.NavigateTo("", true);
    }
}